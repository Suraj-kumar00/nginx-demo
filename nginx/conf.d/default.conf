# Backend upstream
upstream backend {
    server backend-service:3000;
}

# Define rate limiting zone
limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;


server {
    listen 80;
    server_name localhost;
    
    # Include common headers
    include /etc/nginx/conf.d/common_headers.conf;
    
    # Set expires based on content type
    expires $expires;
    
    # Root redirect to frontend
    location = / {
        return 301 /frontend/;
    }
    
    # Serve frontend static files
    location /frontend/ {
        alias /usr/share/nginx/html/frontend/;
        try_files $uri $uri/ /frontend/index.html;
        
        # Cache static assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # No cache for HTML files
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
    }
    
    # API endpoint 1: Hello
    location /api/hello {
        limit_req zone=mylimit burst=20 nodelay;
        proxy_pass http://backend/hello;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # API endpoint 2: Time
    location /api/time {
        limit_req zone=mylimit burst=20 nodelay;
        proxy_pass http://backend/time;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # API endpoint 3: Status
    location /api/status {
        limit_req zone=mylimit burst=20 nodelay;
        proxy_pass http://backend/status;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Nginx health check
    location /health {
        access_log off;
        return 200 "Nginx is healthy\n";
        add_header Content-Type text/plain;
    }
}