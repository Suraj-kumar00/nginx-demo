# Include upstream configurations
include /etc/nginx/conf.d/load_balancer.conf;

server {
    listen 80;
    server_name localhost;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "NGINX is healthy\n";
        add_header Content-Type text/plain;
    }

    # Root redirect
    location = / {
        return 301 /frontend/;
    }

    # Serve frontend files
    location /frontend/ {
        alias /usr/share/nginx/html/frontend/;
        try_files $uri $uri/ /frontend/index.html;
        
        # Cache static assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # No cache for HTML files
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
    }

    # API endpoints with load balancing
    location /api/ {
        proxy_pass http://backend_servers/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Individual server endpoints for testing
    location /api/primary/ {
        proxy_pass http://primary-server:3001/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /api/secondary/ {
        proxy_pass http://secondary-server:3002/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /api/tertiary/ {
        proxy_pass http://tertiary-server:3003/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
