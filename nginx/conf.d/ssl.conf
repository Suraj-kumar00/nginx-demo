# SSL session configuration[7][13][19]
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 24h;
ssl_session_tickets off;

# SSL protocols and ciphers
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
ssl_prefer_server_ciphers off;

# SSL certificate configuration
ssl_certificate /etc/nginx/ssl/nginx-demo.crt;
ssl_certificate_key /etc/nginx/ssl/nginx-demo.key;

# HTTPS server configuration
server {
    listen 443 ssl http2;
    server_name localhost nginx-demo.local;

    # HSTS header
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Additional security headers for HTTPS
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Same location blocks as HTTP server
    location = / {
        return 301 /frontend/;
    }

    location /frontend/ {
        alias /usr/share/nginx/html/frontend/;
        try_files $uri $uri/ /frontend/index.html;
    }

    location /api/ {
        limit_req zone=api burst=50 nodelay;
        
        proxy_pass http://backend_servers/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Ssl on;
    }
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name localhost nginx-demo.local;
    
    location / {
        return 301 https://$server_name$request_uri;
    }
    
    location /health {
        access_log off;
        return 200 "NGINX HTTP redirect is working\n";
        add_header Content-Type text/plain;
    }
}
